var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'Dart2基本語法', 'text': '', 'tags': '', 'url': 'Dart2基本語法.html'}, {'title': '上課影片', 'text': '\n', 'tags': '', 'url': '上課影片.html'}, {'title': 'Dart解微分方程式', 'text': '老師講解影片 \n \n 重點整理： \n 1.Dart 程式語言的執行與傳統的 C 語言程式相同,都 \xa0 必須從 main() 主函式開始執行 \n 2.Dart 程式語法使用 ";" 隔開 完整的可執行程式段 , 並利用大括號 "{}" 來區隔程式區段 \n 3.Dart 程式擁有資料型別推斷的設計, 可是在變數內容存放特定資料型別後, 將無法再自動轉為其他型別資料 \n 4. 使用者也可以自行利用\xa0 https://github.com/dart-lang/dart-services \xa0程式碼, 自行建立 Dartpad 所需的後端伺服器，並修改 Dartpad 前端的設定便可在區域網路中運行 Dartpad 服務. \n 5.另一種利用Dartpad 引用 Dart 程式的方法為 Github 倉儲資料引用，引入包含 index.html 與 style.css 以及 .dart 程式的網際程式 \n gh_owner - 宣告 github 擁有者, 即 Github 登入帳號. \n gh_repo - 宣告所使用的 github 倉儲. \n gh_path - 宣告 github 資料目錄所在路徑. \n theme - 宣告所要引用的頁面顏色主題, 設為 dark 表示使用暗色系頁面. \n run - 設為 true 表示頁面引用後, 程式直接執行 \n', 'tags': '', 'url': 'Dart解微分方程式.html'}, {'title': 'Q＆A', 'text': 'Q：使用python開近端時，flaskapp.py出現錯誤 \n \n \n A：使用pip install -U flask-cors安裝模組. \n \n', 'tags': '', 'url': 'Q＆A.html'}, {'title': '建置Blog步驟', 'text': '\n', 'tags': '', 'url': '建置Blog步驟.html'}]};