<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Wed</h1>
<p><a href="http://mde.tw/cp2019/content/index.html"><span></span></a></p>
<ul>
<li>2019 Fall Computer aided design</li>
</ul>
<p><a href="http://mde.tw/cad2019/content/index.html">http://mde.tw/cad2019/content/index.html</a></p>
<ul>
<li>2019 Fall Computer program</li>
</ul>
<p><a href="http://mde.tw/cp2019/content/index.html">http://mde.tw/cp2019/content/index.html</a></p>
<ul>
<li>youtube</li>
</ul>
<p><a href="https://www.youtube.com/channel/UCJ0Ye3mhMApH0yxAcwCXs5g/videos">https://www.youtube.com/channel/UCJ0Ye3mhMApH0yxAcwCXs5g/videos</a></p>
<ul>
<li>Dartpad       <a href="https://mde.tw/dartpad/">https://mde.tw/dartpad/</a></li>
</ul>
<h1>亂數分組</h1>
<p><span> 上課第一週即進行學員亂數分組</span></p>
<p>流程圖符號說明</p>
<p><img alt="" height="495" src="/images/6666666666666.png" width="357"/></p>
<p>基本流程:</p>
<p>1.獲得班級修課成員名單</p>
<p>2.決定各組人數</p>
<p>3.弄亂成員學號資料的次序</p>
<p>4.決定好每組幾人, 從頭開始分組, 以確定各組成員</p>
<p>5.若最後一組人數過少, 將分別依序捕到前述已經分組的組別中</p>
<p>6.在課程加退選階段結束後, 不排除重新分組</p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Dart2基本語法</h1>
<h3>上課影片</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/VIuJnO_GiqI" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/YpxZEQZ-NRo" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HyBa_29aflg" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/7jwh_zBaBPk" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/PiJkXzTxHJc" width="560"></iframe></p>
<h1>Dart解微分方程式</h1>
<p><span>老師講解影片</span></p>
<p><br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/fyQCBeHf6Es" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/QVHmzBRJ9_M" width="560"></iframe></p>
<p>重點整理：</p>
<p>1.Dart 程式語言的執行與傳統的 C 語言程式相同,都<span> </span><span>必須從 main() 主函式開始執行</span></p>
<p>2.Dart 程式語法使用 ";" 隔開<span>完整的可執行程式段</span>, 並利用大括號 "{}" 來區隔程式區段</p>
<p>3.Dart 程式擁有資料型別推斷的設計, 可是在變數內容存放特定資料型別後, 將無法再自動轉為其他型別資料</p>
<p>4.<span>使用者也可以自行利用 </span><a href="https://github.com/dart-lang/dart-services">https://github.com/dart-lang/dart-services</a><span> 程式碼, 自行建立 Dartpad 所需的後端伺服器，並修改 Dartpad 前端的設定便可在區域網路中運行 Dartpad 服務.</span></p>
<p><span>5.另一種利用Dartpad 引用 Dart 程式的方法為 Github 倉儲資料引用，引入包含 index.html 與 style.css 以及 .dart 程式的網際程式</span></p>
<p>gh_owner - 宣告 github 擁有者, 即 Github 登入帳號.</p>
<p>gh_repo - 宣告所使用的 github 倉儲.</p>
<p>gh_path - 宣告 github 資料目錄所在路徑.</p>
<p>theme - 宣告所要引用的頁面顏色主題, 設為 dark 表示使用暗色系頁面.</p>
<p>run - 設為 true 表示頁面引用後, 程式直接執行</p>
<h1>Q＆A</h1>
<p>Q1：使用python開近端時，flaskapp.py出現錯誤</p>
<p><img alt="" height="151" src="/images/2.png" width="646"/></p>
<p><img alt="" height="28" src="/images/1.png" width="348"/></p>
<p>A：使用pip install -U flask-cors安裝模組.</p>
<p></p>
<p><span><span><span>Q2 : 無法執行ffmpeg</span></span></span></p>
<p>A1 : ffmpeg.exe 複製一份, 放到 y:即可在命令列任何地方執行 ffmpeg 指令.</p>
<p><span><span><span>A2 : 將已經存在隨身碟的 ffmpeg.exe, 所在目錄放入 path 命令搜尋路徑之中.</span></span></span></p>
<p><span><span><span>Q3 : 如何在Dart語法中打次方</span></span></span></p>
<p>A : 可<span>參考 </span><a href="https://api.dartlang.org/stable/2.6.0/dart-math/dart-math-library.html" rel="nofollow">https://api.dartlang.org/stable/2.6.0/dart-math/dart-math-library.html</a><span><span> </span>中的說明</span></p>
<h1>建置Blog步驟</h1>
<p><img alt="" height="620" src="/images/3.jpg" width="465"/></p>
<h1>Dart按鈕</h1>
<script>
function getDart(dirname){
    source = "https://dartpad.github.io/embed-dart.html?gh_owner=40623157&gh_repo=CP2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
    document.getElementById("iframe").src = source ;
}

function getHtmlDart(dirname){
    source = "https://dartpad.github.io/embed-html.html?gh_owner=40623157&gh_repo=CP2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
document.getElementById("iframe").src = source ;
}

function getFlutter(dirname){
    source = "https://dartpad.github.io/embed-flutter.html?gh_owner=40623157&gh_repo=CP2019&gh_path=downloads/dart_ex/" + dirname + "&theme=dark";
document.getElementById("iframe").src = source ;
}

function largest(){
document.getElementById("iframe").width = document.body.clientWidth ;
document.getElementById("iframe").height = document.body.clientWidth*0.5 ;
}

function original(){
document.getElementById("iframe").width = 800 ;
document.getElementById("iframe").height = 600 ;
}
</script>
<!-- 取 Dart 程式的按鈕 -->
<h4>純 Dart 程式</h4>
<p><button onclick="getDart('hello')">Hello</button> <button onclick="getDart('for')">For Loop</button> <button onclick="getDart('sum')">Sum</button> <button onclick="getDart('runge_kutta')">Runge-Kutta</button> <button onclick="getDart('rk_ex1')">RK ex1</button> <button onclick="getDart('mass_spring_damping')">Mass Spring Damping</button></p>
<p><button onclick="getDart('temperature')">溫度轉換</button></p>
<p><button onclick="getDart('123')">數列、重複迴圈</button></p>
<p><button onclick="getDart('for c-f')">for c-f</button></p>
<h4>Html 程式</h4>
<p><button onclick="getHtmlDart('roc_flag')">ROC Flag</button> <button onclick="getHtmlDart('grid')">Grid</button> <button onclick="getHtmlDart('xyplot')">X-Y Plot</button> <button onclick="getHtmlDart('slithery')">Slithery</button></p>
<p><button onclick="getHtmlDart('temperature-1')">temperature-1</button></p>
<h4>Flutter 程式</h4>
<p><button onclick="getFlutter('flutter1')">Flutter1</button> <button onclick="getFlutter('flutter2')">Flutter2</button> <button onclick="getFlutter('flutter3')">Flutter3</button></p>
<p><!-- 內建放入的 Dart 原始碼 --></p>
<p><button onclick="largest()">放大</button> <button onclick="original()">回復</button></p>
<p><iframe height="600" id="iframe" src="https://dartpad.dartlang.org/embed-dart.html?gh_owner=40623157&amp;gh_repo=CP2019&amp;gh_path=downloads/dart_ex/for&amp;theme=dark" width="800"></iframe><br/><br/></p>
<!-- footer -->
<h1>W16查驗考試</h1>
<h1>SSH操作影片</h1>
<p><br/><br/></p>